@model TrashCollector.Models.Employee

@{
    ViewBag.Title = "Nearby Customers";
}

<h2>Nearby Customers</h2>
<div class="row">
    <div class="container-fluid">
        <div class="google-map">

        </div>
    </div>
</div>
<div class="row">
    <div class="container-fluid">
        @using (Html.BeginForm("Index", "Employee", FormMethod.Get))
        {
            <div class="form-group">
                <label class="control-label col-md-2">Pick a day:</label>
                <div class="col-md-10">
                    @Html.DropDownList("dayOfWeek", new SelectList(Enum.GetValues(typeof(DayOfWeek))), new { @class = "form-control", style="display: inline-block;" })
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
    
</div>

<div class="row">
    <div class="container-fluid">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Customers[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Customers[0].Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Customers[0].ZipCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Customers[0].PickupDay)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Customers[0].SpecialPickup)
                </th>

            </tr>

            @foreach (var item in Model.Customers)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PickupDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SpecialPickup)
                </td>
                <td>
                    @using (Html.BeginForm("Index", "Employee", new { employeeId = Model.Id, id = item.Id }, FormMethod.Post))
                    {
                        if (item.MoneyOwed == 0 && item.StartDate <= DateTime.Today && item.EndDate >= DateTime.Today)
                        {
                            <input type="submit" class="btn btn-success" value="Confirm Pickup" />
                        }
                        else if (item.StartDate > DateTime.Today || item.EndDate < DateTime.Today)
                        {
                            <input type="submit" class="btn btn-default disabled" disabled value="Pickup Suspended" />
                        }
                        else
                        {
                            <input type="submit" class="btn btn-default disabled" value="Confirmed Pickup" disabled />
                        }
                    }
                </td>
                <td>

                    @Html.ActionLink("Details", "Details", new { employeeId = Model.Id, id = item.Id })
                </td>
            </tr>
            }
            
        </table>
    </div>
    
    <script type="text/javascript">

    </script>

</div>


